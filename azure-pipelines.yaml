name: $(Build.SourceBranch)-$(date:yyyyMMdd)$(rev:.r)

trigger:
  branches:
    include:
      - 'main'

pool:
  vmImage: 'ubuntu-latest'

variables:
  - group: Hemmeligheter
  - name: fullSha
    value: '$(Build.SourceVersion)'
  - name: imageName
    value: 'eu.gcr.io/prod-bip/ssb/dapla/dapla-pypiserver'
  - name: repoName
    value: 'prod-bip/ssb/dapla/dapla-pypiserver'

resources:
  repositories:
    - repository: templates
      type: github
      name: statisticsnorway/azure-pipelines-templates
      ref: refs/tags/1.1.10
      endpoint: statisticsnorway

jobs:
  - job: buildAndPush
    displayName: 'build and push Dockerimage'
    steps:
      - task: Cache@2
        inputs:
          key: 'docker | cache'
          path: $(Pipeline.Workspace)/docker
          cacheHitVar: DOCKER_CACHE_HIT
        displayName: Cache Docker images
      - script: |
            docker load -i $(Pipeline.Workspace)/docker/cache.tar
            displayName: Restore Docker image
            condition: and(not(canceled()), eq(variables.DOCKER_CACHE_HIT, 'true'))
      - template: 'docker/docker-build-image-and-push-to-gcr.yml@templates'
        parameters:
          imageName: $(imageName)
          repoName: $(repoName)
          Dockerfile: "Dockerfile"
      - script: |
           mkdir -p $(Pipeline.Workspace)/docker
           docker save -o $(Pipeline.Workspace)/docker/cache.tar cache
        displayName: Save Docker image
        condition: and(not(canceled()), or(failed(), ne(variables.DOCKER_CACHE_HIT, 'true')))
  - template: 'docker/docker-tag-for-production.yml@templates'
    parameters:
      tagToTag: 'main-$(fullSha)'
      gcrImageName: $(imageName)
    